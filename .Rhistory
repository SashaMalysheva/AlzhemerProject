source('C:/Users/alex/alzhemerproject/Alzhemerproject/data_preposetion.R')
elist = my_data
library("vsn")
library(vsn)
biocLite(vsc)
biocLite("PAA")
source("https://bioconductor.org/biocLite.R")
biocLite("vsn")
install.packages("Rcpp")
install.packages("Rcpp")
library(limma)
#Load GPR files
my_data <- loadGPR(gpr.path="Data", targets.path="Data/targets.txt",array.type = "ProtoArray")
dev.off()
bg_matrix <- backgroundCorrect(my_data, method="normexp", normexp.method="saddle")
plotArray(elist, idx=3, data.type="bg", log=FALSE, normalized=FALSE, aggregation="min", colpal="topo.colors")
library("vsn")
plotMAPlots(elist=elist, idx=10)
elist_1 <- normalizeArrays(elist=elist, method="cyclicloess", cyclicloess.method="fast")
library("pheatmap")
# Take matrix part
E <- elist_1$E
head(E)
gn = sub(pattern = 'Hs~', rep = "", x = elist_1$genes$Name)
gn = sub(pattern = '~.*', rep = "", gn)
gn = sub(pattern = '.*:', rep = "", gn)
head(gn)
row.names(E) <- gn
library("PAA")
plotArray(elist, idx=3, data.type="bg", log=FALSE, normalized=FALSE, aggregation="min", colpal="topo.colors")
library("vsn")
plotMAPlots(elist=elist, idx=10)
plotArray(elist, idx=3, data.type="bg", log=FALSE, normalized=FALSE, aggregation="min", colpal="topo.colors")
try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("PAA")
a
a
my_data <- loadGPR(gpr.path="Data", targets.path="Data/targets.txt",array.type = "ProtoArray")
dev.off()
bg_matrix <- backgroundCorrect(my_data, method="normexp", normexp.method="saddle")
plotArray(elist, idx=3, data.type="bg", log=FALSE, normalized=FALSE, aggregation="min", colpal="topo.colors")
library("vsn")
plotMAPlots(elist=elist, idx=10)
elist_1 <- normalizeArrays(elist=elist, method="cyclicloess", cyclicloess.method="fast")
library("pheatmap")
E <- elist_1$E
head(E)
gn = sub(pattern = 'Hs~', rep = "", x = elist_1$genes$Name)
gn = sub(pattern = '~.*', rep = "", gn)
gn = sub(pattern = '.*:', rep = "", gn)
head(gn)
row.names(E) <- gn
head(E)
aggr <- aggregate(E, list(gn), mean)
row.names(aggr) <- aggr$Group.1
aggr <- aggr[-1]
View(E)
plotMAPlots(elist=elist, idx=10)
